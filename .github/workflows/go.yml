name: Go CI/CD

on:
  push:
    branches:
      - '**'

env:
  GO_VERSION: 1.17
  FLOW_GO_CRYPTO_VERSION: v0.25.0

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: flow-rosetta
      
    - name: Check out FlowGo
      uses: actions/checkout@v2
      with:
        repository: onflow/flow-go
        ref: ${{ env.FLOW_GO_CRYPTO_VERSION }}
        path: flow-go

    - name: Format
      run: |
        cd flow-rosetta
        go fmt ./... && git status && git --no-pager diff && git diff-index --quiet HEAD --

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Lint
      uses: golangci/golangci-lint-action@v3.1.0
      with:
        args: -v -E golint,misspell,gocyclo,gocritic,whitespace,goconst,bodyclose,unconvert,lll
        version: v1.30

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v2
        with:
          path: flow-rosetta

      - name: Check out FlowGo
        uses: actions/checkout@v2
        with:
          repository: onflow/flow-go
          ref: ${{ env.FLOW_GO_CRYPTO_VERSION }}
          path: flow-go

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # The protobuf steps uses the official instructions to install the
      # pre-compiled binary, see:
      # https://grpc.io/docs/protoc-installation/#install-pre-compiled-binaries-any-os
      - name: Install Protobuf compiler
        run: |
          cd flow-rosetta
          PB_REL="https://github.com/protocolbuffers/protobuf/releases"
          curl -LO $PB_REL/download/v3.17.3/protoc-3.17.3-linux-x86_64.zip
          unzip protoc-3.17.3-linux-x86_64.zip -d $HOME/.local
          export PATH="$PATH:$HOME/.local/bin"
          git clean -fd

      # In order to be able to generate the protocol buffer and GRPC files, we
      # need to install the related Go modules.
      - name: Install Protobuf dependencies
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
          go install github.com/srikrsna/protoc-gen-gotag@v0.6.1

      - name: Cache Crypto package
        uses: actions/cache@v2
        with:
          path: ./flow-go/crypto
          key: ${{ runner.os }}-crypto
          restore-keys: |
            ${{ runner.os }}-crypto

      - name: Install Flow Go's crypto
        run: |
          cd ./flow-go/crypto
          go generate .

      # This check makes sure that the `go.mod` and `go.sum` files for Go
      # modules are always up-to-date.
      - name: Verify Go modules
        run: |
          cd flow-rosetta 
          go mod tidy && git status && git --no-pager diff && git diff-index --quiet HEAD --

      # This check makes sure that the generated protocol buffer files in Go
      # have been updated in case there was a change in the definitions.
      - name: Verify generated files
        run: |
          cd flow-rosetta
          go generate ./... && git status && git --no-pager diff && git diff-index --quiet HEAD --

      # This check makes sure that we can compile the binary as a pure Go binary
      # without CGO support.
      - name: Verify compilation
        run: |
          cd flow-rosetta
          go build -tags relic ./...

  test:
    name: Test/Coverage
    needs: [ format, lint, build ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: flow-rosetta

    - name: Check out FlowGo
      uses: actions/checkout@v2
      with:
        repository: onflow/flow-go
        ref: ${{ env.FLOW_GO_CRYPTO_VERSION }}
        path: flow-go

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
  
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Crypto package
      uses: actions/cache@v2
      with:
        path: ./flow-go/crypto
        key: ${{ runner.os }}-crypto
        restore-keys: |
          ${{ runner.os }}-crypto
        
    - name: Install Flow Go's crypto
      run: |
        cd ./flow-go/crypto
        go generate .

    - name: Check Coverage
      run: |
        cd flow-rosetta
        make coverage

    - name: Upload Coverage HTMl artifact
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: ./flow-rosetta/coverage/coverage.html